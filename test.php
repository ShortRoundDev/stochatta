<!DOCTYPE html>

<html>
<head>
	<link rel="stylesheet" type="text/css" href="style.css">
	<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
</head>
<body>
	<div id="loadingScreen">
		<img src="res/loading.gif"><br>
		<p>Loading...</p>
		<p id="progress">5%</p>
	</div>
	<div id="navbar">
		<a href="index.php">
		<div class="icon"><img src="res/buildings.png">
			<div class="tagline">Home</div>
		</div>
		</a>
		<a href="about.html">
		<div class="icon"><img src="res/sign.png">
			<div class="tagline">Info</div>
		</div>
		</a>
		<a href="test.php">
		<div class="icon"><img src="res/science.png">
			<div class="tagline">Testing</div>
		</div>
		</a>
		<a href="sources.html">
		<div class="icon"><img src="res/library.png">
			<div class="tagline">Sources</div>
		</div>
		</a>
	</div>

	<div id="textContent">

		<h1>Testing Center</h1>
		<p class="info">
			This is the testing center. Here, you can help make stochatta better by answering a few questions.
		</p>
		<p class="info">
			Below are some selections from famous philosophers, as well as snippets generated by Stochatta. Simply identify which ones are the philosopher (green) and which ones are Stochatta (red), and find out how well you did afterword!
		</p>
		<p class="info">
			Because it takes about 1 minute for stochatta to generate sentences, each quote, human and machine, has been generated ahead of time. Thus, if you see duplicate quotes, this does not indicate whether or not they are human. It simply means that the testing center has run into the same quotes in the database.
		</p>
		<h3>#1</h3>
		<div class="selection" id="0"><div class="pre-show" id="quote0"></div></div>
		<div id="buttonarea" parent="0">
			<div class="button real" onclick="setChoice(this, 'rgba(46,204,113,0.3)', 0)">
				Man
			</div>
			<div class="button machine" onclick="setChoice(this, 'rgba(231,76,70,0.3)', 1)">
				Machine
			</div>
		</div>
		<h3>#2</h3>
		<div class="selection" id="1"><div class="pre-show" id="quote1"></div></div>
		<div id="buttonarea" parent="1">
			<div class="button real" onclick="setChoice(this, 'rgba(46,204,113,0.3)', 0)">
				Man
			</div>
			<div class="button machine" onclick="setChoice(this, 'rgba(231,76,70,0.3)', 1)">
				Machine
			</div>
		</div>
		<h3>#3</h3>
		<div class="selection" id="2"><div class="pre-show" id="quote2"></div></div>
		<div id="buttonarea" parent="2">
			<div class="button real" onclick="setChoice(this, 'rgba(46,204,113,0.3)', 0)">
				Man
			</div>
			<div class="button machine" onclick="setChoice(this, 'rgba(231,76,70,0.3)', 1)">
				Machine
			</div>
		</div>
		<h3>#4</h3>
		<div class="selection" id="3"><div class="pre-show" id="quote3"></div></div>
		<div id="buttonarea" parent="3">
			<div class="button real" onclick="setChoice(this, 'rgba(46,204,113,0.3)', 0)">
				Man
			</div>
			<div class="button machine" onclick="setChoice(this, 'rgba(231,76,70,0.3)', 1)">
				Machine
			</div>
		</div>
		<h3>#5</h3>
		<div class="selection" id="4"><div class="pre-show" id="quote4"></div></div>
		<div id="buttonarea" parent="4">
			<div class="button real" onclick="setChoice(this, 'rgba(46,204,113,0.3)', 0)">
				Man
			</div>
			<div class="button machine" onclick="setChoice(this, 'rgba(231,76,70,0.3)', 1)">
				Machine
			</div>
		</div>
		<h3>#6</h3>
		<div class="selection" id="5"><div class="pre-show" id="quote5"></div></div>
		<div id="buttonarea" parent="5">
			<div class="button real" onclick="setChoice(this, 'rgba(46,204,113,0.3)', 0)">
				Man
			</div>
			<div class="button machine" onclick="setChoice(this, 'rgba(231,76,70,0.3)', 1)">
				Machine
			</div>
		</div>
		<h3>#7</h3>
		<div class="selection" id="6"><div class="pre-show" id="quote6"></div></div>
		<div id="buttonarea" parent="6">
			<div class="button real" onclick="setChoice(this, 'rgba(46,204,113,0.3)', 0)">
				Man
			</div>
			<div class="button machine" onclick="setChoice(this, 'rgba(231,76,70,0.3)', 1)">
				Machine
			</div>
		</div>
		<h3>#8</h3>
		<div class="selection" id="7"><div class="pre-show" id="quote7"></div></div>
		<div id="buttonarea" parent="7">
			<div class="button real" onclick="setChoice(this, 'rgba(46,204,113,0.3)', 0)">
				Man
			</div>
			<div class="button machine" onclick="setChoice(this, 'rgba(231,76,70,0.3)', 1)">
				Machine
			</div>
		</div>
		<h3>#9</h3>
		<div class="selection" id="8"><div class="pre-show" id="quote8"></div></div>
		<div id="buttonarea" parent="8">
			<div class="button real" onclick="setChoice(this, 'rgba(46,204,113,0.3)', 0)">
				Man
			</div>
			<div class="button machine" onclick="setChoice(this, 'rgba(231,76,70,0.3)', 1)">
				Machine
			</div>
		</div>
		<h3>#10</h3>
		<div class="selection" id="9"><div class="pre-show" id="quote9"></div></div>
		<div id="buttonarea" parent="9">
			<div class="button real" onclick="setChoice(this, 'rgba(46,204,113,0.3)', 0)">
				Man
			</div>
			<div class="button machine" onclick="setChoice(this, 'rgba(231,76,70,0.3)', 1)">
				Machine
			</div>
		</div>
		<div id="submit">

			<div class="button submit" onclick="submit()">
				Submit
			</div>


		</div>
		<div id="submitwarning">
		</div>
	</div>

	<script>
			/*debugging; counts the number of XHR's returned*/
		var counted = 0;

			/*quotes is an array with the activated quotes; holds int values to identify quote type*/
		var quotes = new Array(10);
			/*holds machine quotes in a stack*/
		var quotesbuffer = new Array();
			/*holds human quotes in a stack*/
		var humanQuotesBuffer = new Array();
		
			/*events triggered after XHRs*/
		var fullyloaded = new Event('fullyloaded');
		var loaded = new Event('loaded');
		var humanloaded = new Event('humanloaded');

			/*xhr is the array of machine XHRs*/
		var xhr = [];
			/*humanXHR is the array of human XHRs*/
		var humanxhr = [];

		generateSentences();

			/*enter test results*/
		function submit(){
			var accuracy = 0;

			for(var i = 0; i < 10; i++){
					/*if an answer is empty, don't submit*/
				if(!document.getElementById(i).hasAttribute("choice")){
					document.getElementById("submitwarning").innerHTML = "You must make a choice for all questions!";
					return 1;
				}
				else if(parseInt(document.getElementById(i).getAttribute("choice")) == parseInt(document.getElementById(i).getAttribute("answer"))){
					accuracy += 1;
				}
			}
				/*submit results*/
			window.location="submit.php?results=" + accuracy;
		}

		function generateSentences(){

			var counter = 0;

				/*get between 2 and 8 machine quotes*/
			var machines = Math.floor(Math.random() * 7) + 2;
			
				
			var machinesLoaded = new CustomEvent("Machines Loaded", null);

				/*create enough XHR's for the machines*/
			xhr = new Array(machines);

			for(var i = 0; i < machines; i++){
					/*set random location for machine quote*/
				var machineLocation = 0;
					/*if quotes location is already taken, retry*/
				do{
					machineLocation = Math.floor(Math.random() * 10);
				}while(quotes[machineLocation])

					/*set quotes at machineLocation to 1, indicating the need for a new quote*/
				quotes[machineLocation] = 1;	
				xhr[i] = new XMLHttpRequest();
					/*push machine quote into buffer and dispatch loaded event*/
				xhr[i].onreadystatechange = function(index){
					return function(){
						if(xhr[index].readyState == 4 && xhr[index].status == 200){
							counted++;
							quotesbuffer.push(xhr[index].responseText);
							console.log(xhr[index].responseText);
							document.dispatchEvent(loaded);
						}else{
							console.log(xhr[index].readyState + ", " + xhr[index].status);
						}
					}
				}(i);
				xhr[i].open('GET', 'testprefab.php', true);
				xhr[i].send();

			}

				/*fill humanxhr with the remaining amount of quotes*/
			humanxhr = new Array(10 - machines);
			for(var i = 0; i < quotes.length; i++){
				if(!quotes[i]){
						/*select location for human quote*/
					quotes[i] = 0;
					humanxhr[i] = new XMLHttpRequest();
						/*push human quote into buffer and dispatch loaded event*/
					humanxhr[i].onreadystatechange = function(index){
						return function(){
							if(humanxhr[index].readyState == 4 && humanxhr[index].status == 200){
								humanQuotesBuffer.push(humanxhr[index].responseText);
								counted++;
								document.dispatchEvent(humanloaded);
							}
						}
					}(i);
					humanxhr[i].open("GET", "human.php", true);
					humanxhr[i].send();
				}
			}

			console.log(quotes);
		}
			/*when machine is loaded, roll over quotes array until value `1` is found, and insert a machine quote there*/
		document.addEventListener('loaded', function(){
			for(var i = 0; i < quotes.length; i++){
				if(quotes[i] == 1){
					document.getElementById(i).setAttribute("answer", "1");
					document.getElementById("quote" + i).innerHTML = "<i>[...] " + quotesbuffer.pop() + " [...]</i>";
					quotes[i] = -1;

					document.getElementById("progress").innerHTML = Math.floor(counted/9 * 100) + "%";

					if(counted == 9)
						document.dispatchEvent(fullyloaded);
					break;
				}
			}
			console.log(counted + " xhrs");
		});
			/*when human is loaded, roll over quotes array until value `0` is found, and insert a human quote there*/
		document.addEventListener('humanloaded', function(){
			for(var i = 0; i < quotes.length; i++){
				if(quotes[i] == 0){
					document.getElementById(i).setAttribute("answer", "0");
					document.getElementById("quote" + i).innerHTML = "<i>[...] " + humanQuotesBuffer.pop() + " [...]</i>";
					quotes[i] = -1;
					document.getElementById("progress").innerHTML = Math.floor(counted/9 * 100) + "%";

					if(counted == 9)
						document.dispatchEvent(fullyloaded);
					break;
				}
			}
		});
			/*when all quotes are loaded, remove loading screen*/
		document.addEventListener('fullyloaded', function(){
			for(var i = 0; i < 10; i++){
				document.getElementById("quote" + i).style.visibility = "visible";
				document.getElementById("quote" + i).style.height = "auto";
				document.getElementById("loadingScreen").style.visibility = "hidden";
				
			}
		});

			/*set choice attribute and color for each div*/
		function setChoice(dom, color, choice){
			var ctx = dom.parentElement;
			var selection = document.getElementById(ctx.getAttribute("parent"));
			selection.style.background = color;
			selection.setAttribute("choice", choice);
			
		}

	</script>
</body>
